#!/usr/bin/env python

# Credit: cubercsl https://github.com/cubercsl/repo/blob/master/scripts/add_aur_pkg

"""
Usage: add_aur_pkg aur_pkg...

"""
import argparse
import os
from typing import Tuple, Optional
import lilac2.vendor.htmlutils as htmlutils
import requests

from pathlib import Path

ROOT = Path(__file__).parent
REPO = Path(ROOT, 'moody')

UserAgent = "Moody's add_aur_pkg script"

s = requests.Session()
s.headers['User-Agent'] = UserAgent


def get_aur_packager(name: str) -> Tuple[Optional[str], str]:
    doc = htmlutils.parse_document_from_requests(f'https://aur.archlinux.org/pkgbase/{name}', s)
    maintainer_cell = doc.xpath('//th[text()="Maintainer:"]/following::td[1]')[0]
    maintainer: Optional[str] = maintainer_cell.text_content().strip().split(None, 1)[0]
    last_packager_cell = doc.xpath('//th[text()="Last Packager:"]/following::td[1]')[0]
    last_packager = last_packager_cell.text_content().strip()
    if not maintainer:
        maintainer = None
    print(f'{name}: {maintainer} {last_packager}')
    return maintainer, last_packager


def usage():
    print(__doc__)


TEMPLATE = '''maintainers:
  - github: moodyhunter

pre_build_script: aur_pre_build(maintainers={maintainers})

post_build: aur_post_build

update_on:
  - source: aur
    aur: {pkg_name}

# vim:set ts=4 sw=2 et:
'''


def add_pkg(pkg_name, maintainers):
    print(pkg_name, maintainers)
    os.makedirs(Path(REPO, pkg_name), exist_ok=True)

    path = Path(REPO, pkg_name, 'lilac.yaml')
    content = TEMPLATE.format(pkg_name=pkg_name, maintainers=repr(maintainers))

    with open(path, 'w') as f:
        f.write(content)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Add an AUR Pakage in repo")
    parser.add_argument('pkg_name')
    args = parser.parse_args()

    maintainer, last_packager = get_aur_packager(args.pkg_name)
    if (maintainer is None or maintainer == 'None'):
        maintainer = last_packager
    add_pkg(args.pkg_name, maintainer)
